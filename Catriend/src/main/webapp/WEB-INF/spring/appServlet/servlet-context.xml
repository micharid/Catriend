<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<!-- 뷰 또는 새로운걸 담을 폴더를 만들게되면 이런형식으로 추가해줘야한다. -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<!-- 실제 명령줄을 합치는 부분 -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- 스프링 프레임워크는 아래에 지정된 패키지를 스캔하다가 @Controller 어노테이션을 만나게 되면 해당 클래스를 컨트롤러로 
		인식하게 된다. -->
	<context:component-scan base-package="com.ohsteward.Catriend" />
	<context:component-scan base-package="catriend.controller" />

	<!-- JDBC템플릿 설정 : dataSource 빈을 생성함 -->
	<beans:bean name="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<beans:property name="url"
			value="jdbc:oracle:thin:@192.168.0.254:1521:orcl" />
		<beans:property name="username" value="cat_riendDB" />
		<beans:property name="password" value="1234" />
	</beans:bean>
	<!-- JDBC템플릿 설정 : template 빈을 생성함 -->
	<beans:bean name="template"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	
	<!-- 파일업로드 크기 제한 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
  		<beans:property name="maxUploadSize" value="10485760"></beans:property>
 	</beans:bean>

	<!-- 파일업로드 경로지정 -->
	<!-- D:\\00Work\\GitHub\\ 부분만 실제 자신의 메타데이터 안의 Catriend 저장 경로로 설정해줘야함. -->
	<!-- <beans:bean id="boardUploadPath" class="java.lang.String">
 		초희 : <beans:constructor-arg value="D:\\00Work\02WorkSpace\\.metadata\\.plugins\\org.eclipse.wst.server.core\\tmp0\\wtpwebapps\\Catriend\\resources\\assets\\img\\boardImages"></beans:constructor-arg>
 		<beans:constructor-arg value="D:\\02WorkSpace\\.metadata\\.plugins\\org.eclipse.wst.server.core\\tmp0\\wtpwebapps\\Catriend\\resources\\assets\\img\\boardImages"></beans:constructor-arg>
	</beans:bean> -->
</beans:beans>
